swagger: "2.0"
info:
  description: "APIリファレンスを作成するにあたり、事前に検証しています。変更の確認"
  version: "1.0.0"
  title: "Sample API リファレンス"
host: "XXXXXXXXXXXX"
basePath: "/XX"
tags:
- name: "gu/api/auth/users"
  description: "一般ユーザ情報"
schemes:
- "https"
paths:
  /gu/api/auth/users/my:
    get:
      tags:
      - "gu/api/auth/users"
      summary: "自身のユーザ情報を取得"
      description: ""
      operationId: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "id"
        name: "id"
        description: "ユーザID"
        required: true
      responses:
        200:
          description: "AUTH_API_USERS_GETCHATIMAGEURL_SUCCESS"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
    put:
      tags:
      - "gu/api/auth/users"
      summary: "自身のユーザ情報を更新"
      description: ""
      operationId: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /gu/api/auth/users/painType:
    put:
      tags:
      - "gu/api/auth/users"
      summary: "自身の痛みのタイプを更新する"
      description: ""
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: ""
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "available"
          - "pending"
          - "sold"
          default: "available"
        collectionFormat: "multi"
      responses:
        204:
          description: "successful operation"
        400:
          description: "INVALID_PARAM"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /gu/api/auth/users/:id(\\d+)/chatImageUrl:
    get:
      tags:
      - "gu/api/auth/users"
      summary: "チャットのイメージを取得"
      description: ""
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: ""
        description: "ユーザID"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/XX/XX"
      security:
      - api_key: []
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"

  description: "Find out more about Swagger"
  url: "http://swagger.io"